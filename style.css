/* Aqui estamos aplicando um conjunto de propriedades para todos os elementos da página. O padding e o margin são definidos como 0 para remover qualquer espaço extra ao redor dos elementos, enquanto o box-sizing é definido como border-box para que o tamanho total do elemento inclua o preenchimento e a borda. */
* {
	padding: 0;
	margin: 0;
	box-sizing: border-box;
}

/* Essas propriedades se aplicam ao elemento body da página. Aqui estamos definindo a cor do texto, a família da fonte, e as propriedades word-wrap e overflow-wrap são definidas como break-word, o que faz com que as palavras sejam quebradas em caso de necessidade, se o espaço for insuficiente. */
body {
	color: #eee;
	font-family: sans-serif;
	word-wrap: break-word;
	overflow-wrap: break-word;
}

/* Essas propriedades se aplicam a todos os títulos de cabeçalho (h1, h2, h3, h4, h5, h6). Aqui estamos definindo a cor do texto e a espessura da fonte. */
h1,
h2,
h3,
h4,
h5,
h6 {
	font-weight: 900;
	color: #fff;
}

/* Estamos definindo as propriedades da classe wrapper. A largura do elemento é definida como 100% e a margem superior e inferior é definida como 0, enquanto a margem esquerda e direita são definidas como auto, o que faz com que o elemento fique centralizado horizontalmente na página. */
.wrapper {
	width: 100%;
	margin: 0 auto;
}

/* Essas propriedades se aplicam a cada uma das três classes de elementos module--parallax na página. Aqui estamos definindo o fundo desses elementos como uma imagem, onde cada imagem tem sua própria URL. */
.module--parallax-1 {
	background-image: url(./img/ocean.jpg);
}

.module--parallax-2 {
	background-image: url(./img/anglerfish.jpeg);
}

.module--parallax-3 {
	background-image: url(./img/goblin-shark.jpg);
}

/* Define algumas propriedades CSS que serão aplicadas ao elemento com a classe 'module--parallax'.
Define que o elemento deve ser exibido como um flex container com seu eixo principal na vertical, e seu conteúdo é centralizado verticalmente.
Define a altura do elemento como 100% da altura da viewport (área de visualização do navegador).
Define a largura do elemento como 100% da largura disponível.
Define que o elemento deve ter posição relativa em relação ao seu contêiner.
Define que o conteúdo que exceder os limites do elemento deve ser ocultado.
Define a posição do fundo da imagem de plano de fundo como central.
Define que a imagem de plano de fundo não deve ser repetida.
Define que a imagem de plano de fundo deve permanecer fixa enquanto a página é rolada, criando o efeito de paralaxe.
Define o tamanho da imagem de plano de fundo para cobrir completamente o elemento.
*/
.module--parallax {
	display: flex;
	flex-direction: column;
	justify-content: center;
	height: 100vh;
	width: 100%;
	overflow: hidden;
	background-position: center;
	background-repeat: no-repeat;
	background-attachment: fixed;
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-o-background-size: cover;
	background-size: cover;
}

/* Define algumas propriedades CSS que serão aplicadas ao pseudoelemento 'after' do elemento com a classe 'module--parallax'.
Define o conteúdo do pseudoelemento como vazio.
Define a altura do pseudoelemento como 100% da altura do elemento com a classe 'module--parallax'.
Define a largura do pseudoelemento como 100% da largura do elemento com a classe 'module--parallax'.
Define que o pseudoelemento deve ter posição absoluta em relação ao seu contêiner.
Define a ordem em que o elemento é empilhado em relação a outros elementos posicionados (eixos z-index).
Define um gradiente linear de cor preta que vai de 0% a 40% de opacidade na vertical, para criar um efeito de sombreamento na parte inferior do elemento com a classe 'module--parallax'.
*/
.module--parallax:after {
	content: '';
	height: 100%;
	width: 100%;
	position: absolute;
	z-index: 0;
	background: -moz-linear-gradient(
		to bottom,
		rgba(0, 0, 0, 0) 0,
		rgba(0, 0, 0, 0) 40%,
		#000 100%
	);
	background: -webkit-linear-gradient(
		to bottom,
		rgba(0, 0, 0, 0) 0,
		rgba(0, 0, 0, 0) 40%,
		#000 100%
	);
	background: linear-gradient(
		to bottom,
		rgba(0, 0, 0, 0) 0,
		rgba(0, 0, 0, 0) 40%,
		#000 100%
	);
}

.module__title {
	text-align: center;
	font-size: 78px;
	z-index: 1;
	text-transform: uppercase;
}

.module--content {
	padding: 40px 0;
	background: #0d2e59;
}

.container {
	width: 100%;
	max-width: 760px;
	margin: 0 auto;
	padding: 0 20px;
}

.container__title {
	margin-bottom: 40px;
	font-size: 30px;
}

.container__text {
	margin-bottom: 40px;
}

.container__text:last-child {
	margin-bottom: 0;
}

@media all and (max-width: 820px) {
	.module__title {
		font-size: 36px;
	}

	.container {
		margin: 0;
		padding: 0;
	}

	.container__title {
		font-size: 32px;
	}

	.container__title,
	.container__text {
		padding: 0 8px;
	}
}
